(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-37538b32"],{"6a51":function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",[e("el-row",[e("h3",[t._v("Callback + Promise")]),e("el-link",{attrs:{href:"https://codepen.io/mitenachian/pen/GVrjGo?editors=0011",target:"_blank"}},[t._v(" CodePen ")])],1),e("el-row",[e("pre",[t._v("\t\t\tfunction getRandomEmail(){\n\t\t\t\tlet email;\n\t\t\t\t$.getJSON('https://randomuser.me/api', function(data){\n\t\t\t\temail = data.results[0].email;\n\t\t\t\t}); // 這個ajax非同步呼叫,無法確保會在下面的return之前\n\t\t\treturn email;\n\t\t\t}\n\t\t\tconst email = getRandomEmail();\n\t\t\tconsole.log(email);\n\t\t\t// 上面的email 會等於undefined, 因為非同步呼叫在ajax執行完就已經先return getRandomEmail的return了\n\n\n\n\t\t\t//上面錯誤的解法 使用callback function 呼叫非同步涵式的設計方法\n\t\t\tfunction getRandomEmail2(callback){\n\t\t\t\t$.getJSON('https://randomuser.me/api', function(data){\n\t\t\t\tcallback(data.results[0].email);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tgetRandomEmail2(function(email2){\n\t\t\tconsole.log(email2);\n\t\t\t});\n\n\t\t\t//假設我要連續取三個或是多個email 會變callback hell如下\n\t\t\t// 三個getEmail會依序執行..\n\t\t\tconst emails=[];\n\t\t\tgetRandomEmail2(function(email2){\n\t\t\temails.push(email2);\n\t\t\tgetRandomEmail2(function(email2){\n\t\t\t\temails.push(email2);\n\t\t\t\tgetRandomEmail2(function(email2){\n\t\t\t\temails.push(email2);\n\t\t\t\tconsole.log(emails);\n\t\t\t\t});\n\t\t\t});\n\t\t\t});\n\n\t\t\t// 所以promise就產生了(為了解決回呼地獄)\n\t\t\t// Promise就是把callback進一步的包裝變成一個promise物件\n\t\t\tfunction getRandomEmail3(){\n\t\t\treturn new Promise(function(resolve,reject){\n\t\t\t\t$.getJSON('https://randomuser.me/api', function(data){\n\t\t\t\tresolve(data.results[0].email);\n\t\t\t\t});\n\t\t\t});\n\t\t\t}\n\t\t\tconst emil3_s = [];\n\t\t\t// .then中傳入一個call back 可以return任何東西(用在後面的.then的輸入)\n\t\t\tgetRandomEmail3()\n\t\t\t.then(function(email){\n\t\t\temil3_s.push(email);\n\t\t\treturn getRandomEmail3(); //promise\n\t\t\t})\n\t\t\t.then(function(email){\n\t\t\temil3_s.push(email);\n\t\t\treturn getRandomEmail3();\n\t\t\t})\n\t\t\t.then(function(email){\n\t\t\temil3_s.push(email);\n\t\t\tconsole.log(emil3_s);\n\t\t\t})\n\n\t\t\t//ES8語法中有個async await 讓promise當成類似同步來執行 (非常接近) 需要babel轉換\n\t\t\tconst email4s = [];\n\t\t\tasync function getEmails(){\n\t\t\tlet email;\n\t\t\temail4s.push( await getRandomEmail3());\n\t\t\temail4s.push( await getRandomEmail3());\n\t\t\temail4s.push( await getRandomEmail3());\n\t\t\temail4s.push( await getRandomEmail3());\n\t\t\tconsole.log(email4s);\n\t\t\t}\n\t\t\tgetEmails();\n\t\t")])])],1)},i=[],l={},m=l,o=(e("e6de"),e("2877")),s=Object(o["a"])(m,a,i,!1,null,"9109a11c",null);n["default"]=s.exports},a624:function(t,n,e){},e6de:function(t,n,e){"use strict";var a=e("a624"),i=e.n(a);i.a}}]);
//# sourceMappingURL=chunk-37538b32.72c51e01.js.map